image: docker
stages:
 - build
 - deploy
build-stage:
 stage: build
 script:
   - echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin
   - docker build -t proflo/onboarding-microservice-backend:${CI_COMMIT_SHORT_SHA} .
   - docker tag proflo/onboarding-microservice-backend:${CI_COMMIT_SHORT_SHA} proflo/onboarding-microservice-backend:latest
   - docker push proflo/onboarding-microservice-backend:${CI_COMMIT_SHORT_SHA}
   - docker push proflo/onboarding-microservice-backend:latest
 tags:
   - immersive-cgi-w7-dotnet

deploy:
  stage: deploy
  image: dtzar/helm-kubectl
  script:
    - kubectl config set-cluster k8s --server="${SERVER}"
    - kubectl config set clusters.k8s.certificate-authority-data ${CERTIFICATE_AUTHORITY_DATA}
    - kubectl config set-credentials gitlab --token="${USER_TOKEN}"
    - kubectl config set-context default --cluster=k8s --user=gitlab
    - kubectl config use-context default
    - sed -i "s/<VERSION>/${CI_COMMIT_SHORT_SHA}/g" kube-manifest.yaml
    - kubectl -n ${NAMESPACE} apply -f kube-manifest.yaml
  tags:
    - immersive-cgi-w7-dotnet
