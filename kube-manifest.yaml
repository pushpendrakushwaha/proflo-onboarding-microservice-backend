apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o kube-manifest.yaml
      kompose.version: 1.18.0 (06a2e56)
    creationTimestamp: null
    labels:
      io.kompose.service: onboarding-microservice-backend
    name: onboarding-microservice-backend
  spec:
    type: NodePort
    ports:
    - name: "5000"
      port: 5000
      targetPort: 80
    selector:
      io.kompose.service: onboarding-microservice-backend
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o kube-manifest.yaml
      kompose.version: 1.18.0 (06a2e56)
    creationTimestamp: null
    labels:
      io.kompose.service: onboarding-microservice-db
    name: onboarding-microservice-db
  spec:
    type: ClusterIP
    ports:
    - name: "27017"
      port: 27017
      targetPort: 27017
    selector:
      io.kompose.service: onboarding-microservice-db
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o kube-manifest.yaml
      kompose.version: 1.18.0 (06a2e56)
    creationTimestamp: null
    labels:
      io.kompose.service: onboarding-microservice-backend
    name: onboarding-microservice-backend
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: onboarding-microservice-backend
      spec:
        containers:
        - env:
          - name: ASPNETCORE_ENVIRONMENT
            value: Production
          - name: database
            value: Userscollection
          - name: mongo_db
            value: mongodb://onboarding-microservice-db:27017
          image: proflo/onboarding-microservice-backend:<VERSION>
          name: onboarding-microservice-backend
          ports:
          - containerPort: 80
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o kube-manifest.yaml
      kompose.version: 1.18.0 (06a2e56)
    creationTimestamp: null
    labels:
      io.kompose.service: onboarding-microservice-db
    name: onboarding-microservice-db
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: onboarding-microservice-db
      spec:
        containers:
        - image: mongo
          name: onboarding-microservice-db
          ports:
          - containerPort: 27017
          resources: {}
          volumeMounts:
          - mountPath: /data/db
            name: db
        restartPolicy: Always
        volumes:
        - name: db
          persistentVolumeClaim:
            claimName: db
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: db
    name: db
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    name: onboarding-microservice-ingress
    annotations:
      kubernetes.io/ingress.class: "nginx"
      nginx.ingress.kubernetes.io/rewrite-target: /
  spec:
    rules:
    - host: onboarding-api.proflo.cgi-wave7.stackroute.io
      http:
        paths:
        - path: /
          backend:
            serviceName: onboarding-microservice-backend
            servicePort: 80

kind: List
metadata: {}